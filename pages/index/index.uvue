<template>
	<view class="container">
		<scroll-view class="log-box" scroll-y :scroll-top="scrollTop" scroll-with-animation>
			<text class="log-text">{{logText}}</text>
		</scroll-view>
		<button class="button" @click="onInitClick">初始化</button>
		<button class="button" @click="onPreGetNumberClick">预取号</button>
		<button class="button" @click="onFullScreenClick">全屏模式</button>
		<button class="button" @click="onDialogClick">弹窗模式</button>
		<button class="button" @click="onAuthExperienceClick">号码认证体验</button>
	</view>
</template>

<script lang="ts">
	import { PrivacyListItem, AuthAndroidUIConfigure, AuthIOSUIConfigure, BaseUIConfig, ShanYanUIConfigure, WidgetsConfig, ShanYanSDKModule } from "../../uni_modules/cl-shanyan"
	import { WidgetItem, StatusBarItem, SystemNavBarItem, NavBarItem, LogoItem, NumberItem, SLoganItem, LoginButtonItem, PrivacyItem, PrivacyList, DialogThemeItem, CLLayoutUIItem, ConfigItem } from "../../uni_modules/cl-shanyan/utssdk/interface.uts"
	const shanYanSDKModule = new ShanYanSDKModule();
	export default {
		data() {
			return {
				logText: "日志输出:\n" as string,
				scrollTop: 0 as number,
			}
		},
		methods: {
			addLog(message : string) : void {
				this.logText = message;
				console.log(this.logText);
			},

			onInitClick() : void {
				shanYanSDKModule.setDebug(true);
				let platform = uni.getDeviceInfo().platform;
				let appId : string;
				console.log('当前运行的终端平台类型是：' + platform);
				if (platform === 'android') {
					// android端信息-->appId：loXN4jDs，appkey：anOiEQaQ，包名：chuanglan.com.shanyantest，包签名：72a946b6fe3a6be27872cca7c820dbe3
					appId = 'loXN4jDs';
				} else if (platform === 'ios') {
					// ios端信息-->appId：jbZTAzrm，appkey：3QknmACj，bundleId：com.zto.connect.fat
					appId = '7I5nJT7h';
				} else if (platform === 'harmonyos') {
					// harmonyos端信息-->appId：FyiH0sFV，appkey：FrUrFv6V，包名：com.harmony.shanyantest，包签名：7265454aa66fb198041e78deed7e68d93ff73dc6c5fa11274612635e05caee85,应用唯一标识:6918664681503718031
					appId = 'FyiH0sFV';
				} else {
					this.addLog('不支持的平台: ' + platform);
					// 非 android/ios/harmonyos平台 直接返回
					return;
				}
				// 执行闪验SDK初始化方法
				shanYanSDKModule.initWithAppId(
					appId,
					(response) => {
						try {
							// 初始化结果回调函数，参数为包含以下属性的对象:code - 初始化状态码,result - 初始化结果描述
							let shanyan_code = response.code;
							let shanyan_result = response.message;
							const logMessage = `初始化结果：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
							this.addLog(logMessage);
						} catch (error) {
							console.error('初始化处理失败:', error);
						}
					}
				);
			},
			onPreGetNumberClick() : void {
				//执行闪验SDK预取号方法
				shanYanSDKModule.getPhoneInfo((response) => {
					try {
						// 预取号结果回调函数，参数为包含以下属性的对象:code - 预取号状态码,result - 预取号结果描述
						let shanyan_code = response.code;
						let shanyan_result = response.message;
						const logMessage = `预取号结果：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
						this.addLog(logMessage);
					} catch (error) {
						console.error('预取号处理失败:', error);
					}
				}
				);
			},
			onFullScreenClick() : void {

				const uiConfigure : ShanYanUIConfigure = {
					androidConfig: {
						//授权页竖屏配置
						verticalConfig: {
							baseUIConfig: {
								authBGImgPath: 'sy_login_bg',
								statusBarConfig: {
									statusBarColor: "#ffaa00",
									isLightColor: false
								},
								systemNavBarConfig: {
									isBackPressedAvailable: true
								},
								navBarConfig: {
									navReturnImgPath: "close-black.png"
								},
								logoConfig: {
									logoImgPath: "logo.png",
									logoOffsetX: 50,
									logoWidth: 60,
									logoHeight: 60
								},
								numberConfig: {
									numberColor: "#0000ff",
									isNumberBold: true
								},
								sloganConfig: {
									isSloganTextBold: true
								},
								loginButtonConfig: {
									logBtnText: "一键登录登录测试"
								},
								privacyConfig: {
									privacyTextSize: 10,
									privacyText: {
										privacyTextHead: "已知晓且同意",
										privacyTextFirst: "和",
										privacyTextEnd: "并授权本应用获取手机号"
									},
									morePrivacy: [
										{
											name: "闪验用户协议1",
											url: "https://api.253.com/api_doc/yin-si-zheng-ce/wei-hu-wang-luo-an-quan-sheng-ming.html",
											content: "、",
											color: "#ff00ff",
										},
										{
											name: "闪验用户协议2",
											url: "https://api.253.com/api_doc/yin-si-zheng-ce/wei-hu-wang-luo-an-quan-sheng-ming.html",
											content: "、",
											//color: "#f00f0f",
										},
										{
											name: "闪验用户协议3",
											url: "https://api.253.com/api_doc/yin-si-zheng-ce/wei-hu-wang-luo-an-quan-sheng-ming.html",
											content: "",
											color: "#f00f0f",
										}]
								},
								dialogThemeConfig: {
									isDialogTheme: false,
									isDialogBottom: true,
									//Android - 设置弹窗授权页遮盖层灰度（0-1）
									dialogDimAmount: 0.5,
									//Android - 设置弹窗授权页宽度
									dialogWidth: 300,
									//Android - 设置弹窗授权页高度
									dialogHeight: 500,
									//Android - 设置弹窗授权页从屏幕左侧边界向右的X偏移量
									//dialogOffsetX: 10,
									//Android - 设置弹窗授权页从屏幕顶部向下的Y偏移量
									//dialogOffsetY: 20
								},

							},
							widgetsConfig: [
								{
									widgetId: "TextView01",
									type: "TextView",
									width: 200,
									height: 40,
									//leftOffsetX: 10,
									topOffsetY: 280,
									textColor: "#ff0000",
									backgroundColor: "#ffffff",
									textContent: "测试TextView类型自定义控件",
									callback: () => {
										console.log(`测试TextView类型自定义控件点击事件监听`)
									}
								},
								{
									widgetId: "Button01",
									type: "Button",
									width: 300,
									height: 50,
									textColor: "#0000ff",
									//leftOffsetX: 10,
									topOffsetY: 350,
									//cornerRadius: 10,
									backgroundColor: "#ffffff",
									//backgroundImgPath: "weixin",
									isAllCaps: true,
									textContent: "测试Button类型自定义控件",
									callback: () => {
										console.log(`测试Button类型自定义控件点击事件监听`)
									}
								},
								{
									widgetId: "ImageView01",
									type: "ImageView",
									width: 50,
									height: 50,
									leftOffsetX: 30,
									topOffsetY: 450,
									backgroundImgPath: "qq",
									textContent: "测试ImageView类型自定义控件",
									callback: () => {
										console.log(`测试ImageView类型自定义控件点击事件监听`)
									}
								}]
						} as ConfigItem,
						// //授权页横屏配置
						// horizontalConfig: {
						// }
					} as AuthAndroidUIConfigure,
					iOSConfig: {
						clNavigationTitleText: '闪验demo',
						clBackgroundImg: 'bb4bf6b9301170c7fa0a766b1024d2d3.jpg',
						clNavigationBackBtnImage: 'back-7.png',
						clLogoImage: 'back-7.png',
						clManualDismiss: 0,
						clNavigationBarHidden:0,
						clAppPrivacyWebBackBtnImage:'back-7.png',
						clOrientationLayOutPortrait: {
							clAuthWindowOrientationCenter:{
								width:(uni.getSystemInfoSync().screenWidth)/2,
								height:(uni.getSystemInfoSync().screenHeight)/2
							},
							clAuthWindowOrientationWidth:(uni.getSystemInfoSync().screenWidth)/2 +100,
							clAuthWindowOrientationHeight:(uni.getSystemInfoSync().screenWidth)/2
							// clLogonLayout: {
							// 	right: -30,
							// 	centerY: 0,
							// 	width: 100,
							// 	height: 100
							// }
						} as CLLayoutUIItem,
						clAppMorePrivacyArray: [{
							decollator: '、',
							lastDecollator: 'NO',
							privacyName: '测试协议',
							privacyURL: 'https://www.baidu.com',
						}, {
							decollator: '、',
							lastDecollator: 'NO',
							privacyName: '测试协议222',
							privacyURL: 'https://www.baidu.com'
<<<<<<< Updated upstream
						}
						],
						clAppPrivacyTextColor: ['#FF4455', '#FE3545']

					} as AuthIOSUIConfigure
				};
=======
						}],
						clAppPrivacyTextColor: ['#FF4455', '#FE3545'],
						clAuthTypeUseWindow:0,
						clAuthWindowCornerRadius:20,
						clAppPrivacyNormalDesTextFirst:"同意",
						widgetsConfig: [{
							widgetId: "textview01",
							type: "TextView",
							width: 200,
							height: 150,
							leftOffsetX: 10,
							topOffsetY: 100,
							textContent: "测试",
							tag:11
						}, {
							widgetId: "button01",
							type: "Button",
							topOffsetY: 520,
							leftOffsetX: 90,
							textContent: "点击按钮",
							width:100,
							height:100,
							tag:21
						},{
							widgetId:'label',
							type:'TextView',
							topOffsetY: 190,
							leftOffsetX: 220,
							textContent: "点击一下就知道",
							width:130,
							height:100,
							tag:31
						}]

					}
				};
				
				shanYanSDKModule.setCallEventUIBlock((tag) => {
					console.log("")
					console.log(tag)
				})
				
>>>>>>> Stashed changes
				shanYanSDKModule.quickAuthLoginWithConfigure(uiConfigure, (response) => {
					try {
						// 预取号结果回调函数，参数为包含以下属性的对象:code - 预取号状态码,result - 预取号结果描述
						let shanyan_code = response.code;
						let shanyan_result = response.message;
						const logMessage = `拉授权页：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
						this.addLog(logMessage);
					} catch (error) {
						console.error('拉授权页处理失败:', error);
					}
				}, (response) => {
					try {
						// 预取号结果回调函数，参数为包含以下属性的对象:code - 预取号状态码,result - 预取号结果描述
						let shanyan_code = response.code;
						let shanyan_result = response.message;
						const logMessage = `授权结果：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
						this.addLog(logMessage);
					} catch (error) {
						console.error('授权结果处理失败:', error);
					}
				});
			},
			onDialogClick() : void {
				this.addLog("弹窗模式按钮被点击");
			},
			onAuthExperienceClick() : void {
				this.addLog("号码认证体验按钮被点击");
			},
		}
	}
</script>

<style>
	.container {
		display: flex;
		flex-direction: column;
		padding: 3px;
	}

	.button {
		padding: 10px 15px;
		background-color: #007AFF;
		color: white;
		border-radius: 5px;
		border: none;
		font-size: 13px;
		margin-top: 15px;
		margin-left: 20px;
		margin-right: 20px;
	}

	.log-box {
		background-color: #363b5f;
		padding: 5px;
		border-radius: 5px;
		height: 200px;
		border: 1px solid red;
	}

	.log-text {
		color: white;
		display: flex;
		width: 100%;
		font-size: 13px;
		font-family: monospace;
		white-space: normal;

	}
</style>