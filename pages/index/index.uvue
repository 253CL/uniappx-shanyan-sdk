<template>
	<view class="container">
		<scroll-view class="log-box" scroll-y :scroll-top="scrollTop" scroll-with-animation>
			<text class="log-text">{{logText}}</text>
		</scroll-view>
		<button class="button" @click="onInitClick">初始化</button>
		<button class="button" @click="onPreGetNumberClick">预取号</button>
		<button class="button" @click="onFullScreenClick">全屏模式</button>
		<button class="button" @click="onDialogClick">弹窗模式</button>
		<button class="button" @click="onAuthExperienceClick">号码认证体验</button>
	</view>
</template>

<script lang="ts">
	import { ShanYanSDKModule } from "../../uni_modules/cl-shanyan"
	const shanYanSDKModule = new ShanYanSDKModule();
	export default {
		data() {
			return {
				logText: "日志输出:\n" as string,
				scrollTop: 0 as number
			}
		},
		methods: {
			addLog(message : string) : void {
				this.logText = message;
				console.log(this.logText);
			},

			onInitClick() : void {
				let platform = uni.getDeviceInfo().platform;
				let appId : string;
				console.log('当前运行的终端平台类型是：' + platform);
				if (platform === 'android') {
					// android端信息-->appId：loXN4jDs，appkey：anOiEQaQ，包名：chuanglan.com.shanyantest，包签名：72a946b6fe3a6be27872cca7c820dbe3
					appId = 'loXN4jDs';
				} else if (platform === 'ios') {
					// ios端信息-->appId：jbZTAzrm，appkey：3QknmACj，bundleId：com.zto.connect.fat
					appId = 'jbZTAzrm';
				} else if (platform === 'harmonyos') {
					// harmonyos端信息-->appId：FyiH0sFV，appkey：FrUrFv6V，包名：com.harmony.shanyantest，包签名：7265454aa66fb198041e78deed7e68d93ff73dc6c5fa11274612635e05caee85,应用唯一标识:6918664681503718031
					appId = 'FyiH0sFV';
				} else {
					this.addLog('不支持的平台: ' + platform);
					// 非 android/ios/harmonyos平台 直接返回
					return;
				}
				// 执行闪验SDK初始化方法
				shanYanSDKModule.initWithAppId(
					appId,
					(response) => {
						try {
							// 初始化结果回调函数，参数为包含以下属性的对象:code - 初始化状态码,result - 初始化结果描述
							let shanyan_code = response.code;
							let shanyan_result = response.result;
							const logMessage = `初始化结果：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
							this.addLog(logMessage);
						} catch (error) {
							console.error('初始化处理失败:', error);
						}
					}
				);
			},
			onPreGetNumberClick() : void {
				//执行闪验SDK预取号方法
				shanYanSDKModule.getPhoneInfo((response) => {
					try {
						// 预取号结果回调函数，参数为包含以下属性的对象:code - 预取号状态码,result - 预取号结果描述
						let shanyan_code = response.code;
						let shanyan_result = response.result;
						const logMessage = `预取号结果：\nshanyan_code=${shanyan_code}\nshanyan_result=${shanyan_result}`;
						this.addLog(logMessage);
					} catch (error) {
						console.error('预取号处理失败:', error);
					}
				}
				);
			},
			onFullScreenClick() : void {
				this.addLog("全屏模式按钮被点击");
			},
			onDialogClick() : void {
				this.addLog("弹窗模式按钮被点击");
			},
			onAuthExperienceClick() : void {
				this.addLog("号码认证体验按钮被点击");
			},
		}
	}
</script>

<style>
	.container {
		display: flex;
		flex-direction: column;
		padding: 3px;
	}

	.button {
		padding: 10px 15px;
		background-color: #007AFF;
		color: white;
		border-radius: 5px;
		border: none;
		font-size: 13px;
		margin-top: 15px;
		margin-left: 20px;
		margin-right: 20px;
	}

	.log-box {
		background-color: #363b5f;
		padding: 5px;
		border-radius: 5px;
		height: 200px;
		border: 1px solid red;
	}

	.log-text {
		color: white;
		display: flex;
		width: 100%;
		font-size: 13px;
		font-family: monospace;
		white-space: normal;

	}
</style>